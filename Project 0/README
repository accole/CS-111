NAME: Adam Cole
EMAIL: ###########@gmail.com
ID: #########


Lab0.c
------
A file, which when compiled, copies input to output through STDIN to STDOUT
through input/output redirection.  By default, input is STDIN and output is
STDOUT unless changed with options --input=FILE and --output=FILE.  If option
--segfault is used, then a segmentation fault will occur.  In order to catch
and handle the segmentation fault, the --catch option can be used.



Makefile
--------
all:	compiles and builds an executable from Lab0.c with correct flags.
clean:	cleans the current directory to contain only the submission files
	breakpoint.png, backtrace.png, Lab0.c, Makefile, and README.
check:	cleans the directory, compiles the executable, and then runs all
	smoke tests in tests.
tests:	smoke tests that ensure the executable file passes the most important
	basic checks.
dist:	builds the distribution tarbell for submission.

Smoketests in tests:
	1) Byte for Byte test
		- compares input and output files to test for basic correctness.
	2) Open test
		- checks the executable exit status is 2 after failing to open
		  an input file that can't be accessed.
	3) Write test
		- checks the executable exit status is 3 after failing to write
		  to an input file that can't be written to.
	4) Segmentation test
		- checks that the executable reports a segmentation error when
		  run with the --segfault option.
	5) Catch test
		- checks that the executable exit status is 4 after successfully
		  catching a segmentation fault.
	6) Incorrect argument test
		- checks that the executable exit status is 1 after encountering
		  an incorrect argument.



backtrace.png
-------------
Backtrace is a screenshot of a GDB session while running lab0, an
executable of the source code found in Lab0.c, after causing a segmentation
fault with the --segfault option and calling the GDB backtrace command. I
used my lecture notes from CS 33 with Paul Eggert Fall 2018 to navigate GDB
and use the correct commands.



breakpoint.png
--------------
Breakpoint is a screenshot of a GDB session while running lab0 just
before causing a segmentation fault with the same option, examining the
dereferenced null pointer to prove NULL. Again, I used my lecture notes from
CS 33 with Paul Eggert Fall 2018 to navigate GDB and use the correct commands.



extra sources
-------------
- TA Slides for getopt and basic I/O redirection guidelines
- exit code 139 for segmentation faults found on stack overflow
	https://stackoverflow.com/questions/14599670/what-error-code-does-a-
	process-that-segfaults-return
- fprintf documentation refferred to at Tutorials point
	https://www.tutorialspoint.com/c_standard_library/c_function_fprint
	f.htm
- how to run makefile silently using .SILENT on stack overflow
	https://stackoverflow.com/questions/3148492/suppress-messages-in-
	make-clean-makefile-silent-remove
- using $? and exit statuses at Advanced Bash-Scripting Guide:
	https://www.tldp.org/LDP/abs/html/exit-status.html


